locale: ja-JP
namespace: js
translations:
    ###########################################################################
    # General
    ###########################################################################

    - key: general.state_of_js.intro
      t: >
          JavaScriptまわりは、もう少し情報が整理されているとよさそうです。


          このアンケートは2016年から、20000人以上の開発者に対し、現在やこれからのトレンドについてデータを集めてきました。


          開発者が次はどのライブラリを学びたいか、またはどのライブラリが最も満足度が高いかなどを知るために、このアンケートへの回答にご協力ください。

    ###########################################################################
    # Sections
    ###########################################################################

    - key: sections.syntax.title
      t: 構文
    - key: sections.syntax.description
      t: JavaScriptの文法

    - key: sections.language.title
      t: 言語
    - key: sections.language.description
      t: JavaScriptの語彙

    - key: sections.data_structures.title
      t: データ構造
    - key: sections.data_structures.description
      t: データの保持と変更のやりかた

    - key: sections.browser_apis.title
      t: ブラウザのAPI
    - key: sections.browser_apis.description
      t: ブラウザが提供する機能

    - key: sections.other_features.title
      t: そのほかの機能
    - key: sections.other_features.description
      t: ほかの技術やパターン

    - key: sections.patterns.title
      t: パターン
    - key: sections.patterns.description
      t: どんな風にコードを書くか

    - key: sections.javascript_flavors.title
      t: JavaScriptフレーバー
    - key: sections.javascript_flavors.description
      t: JavaScriptにコンパイルされる言語

    - key: sections.front_end_frameworks.title
      t: フロントエンドフレームワーク
    - key: sections.front_end_frameworks.description
      t: フロントエンドのフレームワークやライブラリ

    - key: sections.datalayer.title
      t: データ層
    - key: sections.datalayer.description
      t: アプリでのデータの読み込みや管理

    - key: sections.back_end_frameworks.title
      t: バックエンドフレームワーク
    - key: sections.back_end_frameworks.description
      t: サーバーでのJavaScript

    - key: sections.testing.title
      t: テスト
    - key: sections.testing.description
      t: コードのテストに使うツール

    - key: sections.mobile_desktop.title
      t: モバイル＆デスクトップ
    - key: sections.mobile_desktop.description
      t: モバイルやデスクトップアプリでのJavaScript

    - key: sections.build_tools.title
      t: ビルドツール
    - key: sections.build_tools.description
      t: コードのコンパイルとビルド

    - key: sections.monorepo_tools.title
      t: モノレポのツール
    - key: sections.monorepo_tools.description
      t: JavaScriptモノレポの管理に使うツール

    - key: sections.tools_others.title
      t: そのほかのツール
    - key: sections.tools_others.description
      t: そのほかのJavaScriptツール

    - key: sections.other_tools.title
      t: そのほかのツール
    - key: sections.other_tools.description
      t: 以下のツールや技術について、普段使っているものにチェックをつけてください

    ###########################################################################
    # Options
    ###########################################################################

    # JS pain points
    # - key: options.js_pain_points.browser_interoperability
    #   t: Browser Compatibility
    # - key: options.js_pain_points.browser_interoperability.description
    #   t: Differences between Chrome, Safari, Firefox, etc.
    # - key: options.js_pain_points.animations
    #   t: Animations
    # - key: options.js_pain_points.animations.description
    #   t: Managing animations, transitions, etc. using JavaScript.
    # - key: options.js_pain_points.form_handling
    #   t: Form Handling
    # - key: options.js_pain_points.form_handling.description
    #   t: Creating forms, managing their state and errors, and saving their data. 
    - key: options.js_pain_points.state_management
      t: ステート管理
    - key: options.js_pain_points.state_management.description
      t: 複雑なアプリケーションで、グローバルなデータのステートを管理すること。
    # - key: options.js_pain_points.performance_issues
    #   t: Performance Issues
    # - key: options.js_pain_points.performance_issues.description
    #   t: Bundle sizes, slow loading, and other performance issues. 
    - key: options.js_pain_points.managing_dependencies
      t: 依存関係の管理
    - key: options.js_pain_points.managing_dependencies.description
      t: 依存関係やパッケージのバージョン、バンドルサイズを管理すること。
    - key: options.js_pain_points.architecture
      t: コード設計
    - key: options.js_pain_points.architecture.description
      t: コードベースを構造化したり管理すること。
    - key: options.js_pain_points.finding_packages
      t: パッケージの検索
    - key: options.js_pain_points.finding_packages.description
      t: JavaScriptパッケージを探したり評価すること。
    - key: options.js_pain_points.writing_modules
      t: モジュールの作成
    - key: options.js_pain_points.writing_modules.description
      t: JavaScriptモジュールを作成したり、パッケージとして公開すること。
    - key: options.js_pain_points.debugging
      t: デバッグ
    - key: options.js_pain_points.debugging.description
      t: コードの問題点を見つけたり、解決すること。
    - key: options.js_pain_points.async_code
      t: 非同期処理
    - key: options.js_pain_points.async_code.description
      t: 非同期な関数を処理すること。
    - key: options.js_pain_points.modules_management
      t: モジュール管理
    - key: options.js_pain_points.modules_management.description
      t: モジュールを書いたり読み込んだりすること。
    - key: options.js_pain_points.date_management
      t: 日付や時刻の処理
    - key: options.js_pain_points.date_management.description
      t: 日付や時刻を処理したり操作すること。
    # - key: options.js_pain_points.xxx
    #   t: 
    # - key: options.js_pain_points.xxx.description
    #   t: 


    # JS missing features
    - key: options.currently_missing_from_js.static_typing
      t: 静的型付け
    - key: options.currently_missing_from_js.static_typing.description
      t: 型のネイティブサポート（TypeScriptと同様の機能）。
    - key: options.currently_missing_from_js.standard_library
      t: 標準ライブラリ
    - key: options.currently_missing_from_js.standard_library.description
      t: 共通ユーティリティの標準ライブラリ。
    - key: options.currently_missing_from_js.pattern_matching
      t: パターンマッチ
    - key: options.currently_missing_from_js.pattern_matching.description
      t: オブジェクトのパターンマッチに使う新しい`match`キーワード。
    - key: options.currently_missing_from_js.pipe_operator
      t: パイプ演算子
    - key: options.currently_missing_from_js.pipe_operator.description
      t: 関数の結果を別の関数に渡す新しい`|>`演算子。
    - key: options.currently_missing_from_js.decorators
      t: デコレータ
    - key: options.currently_missing_from_js.decorators.description
      t: メタプログラミングや値に処理を付加するデコレータ。
    - key: options.currently_missing_from_js.immutable_data_structures
      t: イミュータブルなデータ構造
    - key: options.currently_missing_from_js.immutable_data_structures.description
      t: '`Record`や`Tuple`など、より徹底したイミュータブルなデータ構造。'
    - key: options.currently_missing_from_js.better_date_management
      t: より良い日付管理
    - key: options.currently_missing_from_js.better_date_management.description
      t: 日付や時刻を処理するための新しい`Temporal`オブジェクト。
    - key: options.currently_missing_from_js.observable
      t: Observable
    - key: options.currently_missing_from_js.observable.description
      t: プッシュベースなデータソースのモデリングに使う新しい型`Observable`。
    # - key: options.currently_missing_from_js.xxx
    #   t: 
    # - key: options.currently_missing_from_js.xxx.description
    #   t: 


    ###########################################################################
    # Features
    ###########################################################################

    # syntax
    - key: features.destructuring
      t: 分割代入（destructuring）
    - key: features.spread_operator
      t: スプレッド構文
    - key: features.arrow_functions
      t: アロー関数（arrow functions）
    - key: features.nullish_coalescing
      t: Nullish Coalescing
    - key: features.optional_chaining
      t: Optional Chaining
    - key: features.private_fields
      t: プライベートフィールド

    # language
    - key: features.proxies
      t: Proxy
    - key: features.async_await
      t: Async/Await
    - key: features.promises
      t: Promise
    - key: features.decorators
      t: デコレータ
    - key: features.decorators.description
      t: デコレータを簡単に言うと、コードの一部を別のコードでラップする（文字通り「デコレート」する）仕組みです。
    - key: features.dynamic_import
      t: Dynamic Import

    # other features
    - key: features.pwa
      t: プログレッシブ・ウェブアプリ（PWA）
    - key: features.wasm
      t: WebAssembly (WASM)

    # patterns
    - key: patterns.object_oriented_programming
      t: オブジェクト指向プログラミング
    - key: features.functional_programming
      t: 関数型プログラミング
    - key: features.reactive_programming
      t: リアクティブプログラミング

    # upcoming features
    # - key: features.static_typing
    #   t: Static Typing

    # - key: features.standard_library
    #   t: Standard Library

    # - key: features.pattern_matching
    #   t: Pattern Matching

    # - key: features.pipe_operator
    #   t: Pipe Operator

    # - key: features.immutable_data_structures
    #   t: Immutable Data Structures

    ###########################################################################
    # Tools
    ###########################################################################

    - key: tools.angular.description
      t: これは[Angular](https://angular.io/)についてで、非推奨になった[AngularJS](https://angularjs.org/)のものではないことに注意してください。
   
    ###########################################################################
    # Other Tools
    ###########################################################################

    - key: tools_others.runtimes
      t: JavaScriptランタイム
    - key: tools_others.runtimes.description
      t: いつもどのエンジン・ランタイム・実行環境を使っていますか？
    - key: tools_others.runtimes.others
      t: そのほかのランタイム
    - key: tools_others.runtimes.others.description
      t: そのほかの回答（自由入力欄）

    - key: tools_others.package_registries
      t: パッケージレジストリ
    - key: tools_others.package_registries.description
      t: いつもどのレジストリからパッケージを取得していますか？
    - key: tools_others.package_registries.others
      t: そのほかのパッケージレジストリ
    - key: tools_others.package_registries.others.description
      t: そのほかの回答（自由入力欄）

    - key: tools_others.form_factors
      aliasFor: environments.form_factors
    - key: tools_others.form_factors.description
      aliasFor: environments.form_factors.description

    ###########################################################################
    # Opinions
    ###########################################################################

    - key: opinions.js_moving_in_right_direction
      t: JavaScriptは正しい方向に進んでいる

    - key: opinions.building_js_apps_overly_complex
      t: JavaScriptアプリの開発はいまやとても複雑になった

    - key: opinions.js_over_used_online
      t: JavaScriptは過剰に使われている

    - key: opinions.enjoy_building_js_apps
      t: JavaScriptアプリの開発は楽しい

    - key: opinions.would_like_js_to_be_main_lang
      t: JavaScriptをメインのプログラミング言語にしたい

    - key: opinions.js_ecosystem_changing_to_fast
      t: JavaScriptエコシステムの変化は速すぎる

    - key: opinions_others.missing_from_js.others
      t: いまのJavaScriptに足りないと感じるものは？

    - key: opinions_others.missing_from_js.others.description
      t: JavaScriptにいつか追加されてほしい機能

    - key: happiness.front_end_frameworks
      t: フロントエンドフレームワークの現状に満足していますか？
    - key: happiness.back_end_frameworks
      t: バックエンドフレームワークの現状に満足していますか？
    - key: happiness.testing
      t: テストツールの現状に満足していますか？
    - key: happiness.mobile_desktop
      t: モバイル・デスクトップフレームワークの現状に満足していますか？
    - key: happiness.build_tools
      t: ビルドツールの現状に満足していますか？
    - key: happiness.monorepo_tools
      t: モノレポツールの現状に満足していますか？

    - key: happiness.state_of_the_web
      t: ウェブ技術の現状に満足していますか？

    - key: happiness.state_of_js
      t: JavaScriptの現状に満足していますか？

    # Pain Points
    - key: opinions.js_pain_points
      t: JavaScriptのつらいところ
    - key: opinions.js_pain_points.description
      t: JavaScriptどんなところで苦労するか、対決させてください。

    - key: opinions_others.js_pain_points.others
      t: そのほかのJavaScriptのつらいところ

    # Missing Features
    - key: opinions.currently_missing_from_js
      t: どんな機能がJavaScriptに足りてないと思いますか？
    - key: opinions.currently_missing_from_js.description
      t: JavaScriptにあれば今すぐ使いたいと思う機能について、対決させてください。
    - key: opinions_others.currently_missing_from_js.others
      t: そのほかでほしい機能

    # pain points/currently missing (results)
    - key: js_pain_points.js_pain_points_wins
      t: JavaScriptのつらいところ
    - key: js_pain_points.js_pain_points_wins.description
      t: JavaScriptについて、最も悪戦苦闘している点はなんでしょうか？結果はトーナメントの各ラウンドの勝者の数で並べています。

    - key: js_pain_points.js_pain_points_matchups
      t: JavaScriptのつらいところ（対戦）
    - key: js_pain_points.js_pain_points_matchups.description
      t: JavaScriptについて、最も悪戦苦闘している点はなんでしょうか？結果は左方の技術が上方の技術に勝ったラウンドの割合を示しています。

    - key: currently_missing_from_js.currently_missing_from_js_wins
      t: JavaScriptに足りていない機能
    - key: currently_missing_from_js.currently_missing_from_js_wins.description
      t: JavaScriptについて、いま使えたらなと最も思う機能はなんでしょうか？結果はトーナメントの各ラウンドの勝者の数で並べています。

    - key: currently_missing_from_js.currently_missing_from_js_matchups
      t: JavaScriptに足りていない機能（対戦）
    - key: currently_missing_from_js.currently_missing_from_js_matchups.description
      t: JavaScriptについて、いま使えたらなと最も思う機能はなんでしょうか？結果は左方の技術が上方の技術に勝ったラウンドの割合を示しています。

    ###########################################################################
    # Resources
    ###########################################################################

    - key: resources.first_steps_js
      t: JavaScriptの最初の勉強方法
    - key: resources.first_steps_js.description
      t: 最初にJavaScriptを学び始めたとき、どの方法で学びましたか。
