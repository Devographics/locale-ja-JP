locale: ja-JP
namespace: js
translations:
    ###########################################################################
    # General
    ###########################################################################

    - key: general.survey_intro_js2019
      t: >
          JavaScriptまわりは、もう少し情報が整理されているとよさそうです。


          このアンケートは2016年から、20000人以上の開発者に対し、現在やこれからのトレンドについてデータを集めてきました。


          開発者が次はどのライブラリを学びたいか、またはどのライブラリが最も満足度が高いかなどを知るために、このアンケートへの回答にご協力ください。

    ###########################################################################
    # Sections
    ###########################################################################

    - key: sections.syntax.title
      t: 構文
    - key: sections.syntax.description
      t: JavaScriptの文法

    - key: sections.language.title
      t: 言語
    - key: sections.language.description
      t: JavaScriptの語彙

    - key: sections.data_structures.title
      t: データ構造
    - key: sections.data_structures.description
      t: データの保持と変更のやりかた

    - key: sections.browser_apis.title
      t: ブラウザのAPI
    - key: sections.browser_apis.description
      t: ブラウザが提供する機能

    - key: sections.other_features.title
      t: そのほかの機能
    - key: sections.other_features.description
      t: ほかの技術やパターン

    - key: sections.patterns.title
      t: パターン
    - key: sections.patterns.description
      t: どんな風にコードを書くか

    - key: sections.javascript_flavors.title
      t: JavaScriptフレーバー
    - key: sections.javascript_flavors.description
      t: JavaScriptにコンパイルされる言語

    - key: sections.front_end_frameworks.title
      t: フロントエンドフレームワーク
    - key: sections.front_end_frameworks.description
      t: フロントエンドのフレームワークやライブラリ

    - key: sections.datalayer.title
      t: データ層
    - key: sections.datalayer.description
      t: アプリでのデータの読み込みや管理

    - key: sections.back_end_frameworks.title
      t: バックエンドフレームワーク
    - key: sections.back_end_frameworks.description
      t: サーバーでのJavaScript

    - key: sections.testing.title
      t: テスト
    - key: sections.testing.description
      t: コードのテストに使うツール

    - key: sections.mobile_desktop.title
      t: モバイル＆デスクトップ
    - key: sections.mobile_desktop.description
      t: モバイルやデスクトップアプリでのJavaScript

    - key: sections.build_tools.title
      t: ビルドツール
    - key: sections.build_tools.description
      t: コードのコンパイルとビルド

    - key: sections.monorepo_tools.title
      t: Monorepo Tools
    - key: sections.monorepo_tools.description
      t: Tools used to manage JavaScript monorepos.

    - key: sections.tools_others.title
      t: Other Tools
    - key: sections.tools_others.description
      t: Other JavaScript tools

    - key: sections.other_tools.title
      t: Other Tools
    - key: sections.other_tools.description
      t: For these tools & technologies, just check the ones that you use regularly.

    ###########################################################################
    # Options
    ###########################################################################

    # JS pain points
    # - key: options.js_pain_points.browser_interoperability
    #   t: Browser Compatibility
    # - key: options.js_pain_points.browser_interoperability.description
    #   t: Differences between Chrome, Safari, Firefox, etc.
    # - key: options.js_pain_points.animations
    #   t: Animations
    # - key: options.js_pain_points.animations.description
    #   t: Managing animations, transitions, etc. using JavaScript.
    # - key: options.js_pain_points.form_handling
    #   t: Form Handling
    # - key: options.js_pain_points.form_handling.description
    #   t: Creating forms, managing their state and errors, and saving their data. 
    - key: options.js_pain_points.state_management
      t: State Management
    - key: options.js_pain_points.state_management.description
      t: Managing global data state in complex applications. 
    # - key: options.js_pain_points.performance_issues
    #   t: Performance Issues
    # - key: options.js_pain_points.performance_issues.description
    #   t: Bundle sizes, slow loading, and other performance issues. 
    - key: options.js_pain_points.managing_dependencies
      t: Managing Dependencies
    - key: options.js_pain_points.managing_dependencies.description
      t: Managing dependencies, package versions and bundle sizes
    - key: options.js_pain_points.architecture
      t: Code Architecture
    - key: options.js_pain_points.architecture.description
      t: Organizing and maintaining your codebase.
    - key: options.js_pain_points.finding_packages
      t: Finding Packages
    - key: options.js_pain_points.finding_packages.description
      t: Finding and evaluating JavaScript packages.
    - key: options.js_pain_points.writing_modules
      t: Writing Modules
    - key: options.js_pain_points.writing_modules.description
      t: Writing JavaScript modules and publishing them as packages. 
    - key: options.js_pain_points.debugging
      t: Debugging
    - key: options.js_pain_points.debugging.description
      t: Identifying and solving issues with your code. 
    - key: options.js_pain_points.async_code
      t: Async Code
    - key: options.js_pain_points.async_code.description
      t: Handling asynchronous functions. 
    - key: options.js_pain_points.modules_management
      t: Modules Management
    - key: options.js_pain_points.modules_management.description
      t: Writing and importing modules. 
    - key: options.js_pain_points.date_management
      t: Date Management
    - key: options.js_pain_points.date_management.description
      t: Handling and manipulating dates and times. 
    # - key: options.js_pain_points.xxx
    #   t: 
    # - key: options.js_pain_points.xxx.description
    #   t: 


    # JS missing features
    - key: options.currently_missing_from_js.static_typing
      t: Static Typing
    - key: options.currently_missing_from_js.static_typing.description
      t: Native types (similar to what TypeScript offers).
    - key: options.currently_missing_from_js.standard_library
      t: Standard Library
    - key: options.currently_missing_from_js.standard_library.description
      t: A standard library of common utilities
    - key: options.currently_missing_from_js.pattern_matching
      t: Pattern Matching
    - key: options.currently_missing_from_js.pattern_matching.description
      t: A new `match` keyword for pattern-matching objects. 
    - key: options.currently_missing_from_js.pipe_operator
      t: Pipe Operator
    - key: options.currently_missing_from_js.pipe_operator.description
      t: A new `|>` operator for passing the result of one function to another.
    - key: options.currently_missing_from_js.decorators
      t: Decorators
    - key: options.currently_missing_from_js.decorators.description
      t: Decorators used to metaprogram and add functionality to a value.
    - key: options.currently_missing_from_js.immutable_data_structures
      t: Immutable Data Structures
    - key: options.currently_missing_from_js.immutable_data_structures.description
      t: New deeply immutable data structures such as `Record` and `Tuple`.
    - key: options.currently_missing_from_js.better_date_management
      t: Better Date Management
    - key: options.currently_missing_from_js.better_date_management.description
      t: A new `Temporal` object for working with dates and times.
    - key: options.currently_missing_from_js.observable
      t: Observable
    - key: options.currently_missing_from_js.observable.description
      t: A new `Observable`` type used to model push-based data sources.
    # - key: options.currently_missing_from_js.xxx
    #   t: 
    # - key: options.currently_missing_from_js.xxx.description
    #   t: 


    ###########################################################################
    # Features
    ###########################################################################

    # syntax
    - key: features.destructuring
      t: 分割代入（destructuring）
    - key: features.destructuring.description
      t: '例：`const { foo } = bar`'
    - key: features.spread_operator
      t: スプレッド構文
    - key: features.spread_operator.description
      t: '例：`[...array1, ...array2]`'
    - key: features.arrow_functions
      t: アロー関数（arrow functions）
    - key: features.arrow_functions.description
      t: '例：`const foo = () => {}`'
    - key: features.nullish_coalescing
      t: Nullish Coalescing
    - key: features.nullish_coalescing.description
      t: '例：`const foo = 0 ?? 42`'
    - key: features.optional_chaining
      t: Optional Chaining
    - key: features.optional_chaining.description
      t: '例：`const dogName = adventurer.dog?.name`'
    - key: features.private_fields
      t: Private Fields
    - key: features.private_fields.description
      t: '例：`class ClassWithPrivateField { #privateField }`'

    # language
    - key: features.proxies
      t: Proxies
    - key: features.async_await
      t: Async/Await
    - key: features.promises
      t: Promises
    - key: features.decorators
      t: Decorators
    - key: features.decorators.description
      t: デコレータを簡単に言うと、コードの一部を別のコードでラップする（文字通り「デコレート」する）仕組みです。
    - key: features.dynamic_import
      t: Dynamic Import
    - key: features.dynamic_import.description
      t: >
        例：`await import('/modules/my-module.js')`

    # data structures
    - key: features.maps
      t: Maps
    - key: features.sets
      t: Sets
    - key: features.typed_arrays
      t: Typed Arrays
    - key: array_prototype_flat
      t: Array.prototype.flat

    # browser apis
    - key: features.service_workers
      t: Service Workers
    - key: features.local_storage
      t: LocalStorage
    - key: features.i18n
      t: i18n
    - key: features.web_components
      t: Web Components
    - key: features.web_audio
      t: Web Audio API
    - key: features.webgl
      t: WebGL
    - key: features.web_animations
      t: Web Animations API
    - key: features.webrtc
      t: WebRTC
    - key: features.web_speech
      t: Web Speech API
    - key: features.webvr
      t: WebVR
    - key: features.websocket
      t: WebSocket
    - key: features.fetch
      t: Fetch API

    # other features
    - key: features.pwa
      t: プログレッシブ・ウェブアプリ（PWA）
    - key: features.wasm
      t: WebAssembly (WASM)

    # patterns
    - key: patterns.object_oriented_programming
      t: オブジェクト指向プログラミング
    - key: features.functional_programming
      t: 関数型プログラミング
    - key: features.reactive_programming
      t: リアクティブプログラミング

    # upcoming features
    # - key: features.static_typing
    #   t: Static Typing

    # - key: features.standard_library
    #   t: Standard Library

    # - key: features.pattern_matching
    #   t: Pattern Matching

    # - key: features.pipe_operator
    #   t: Pipe Operator

    # - key: features.immutable_data_structures
    #   t: Immutable Data Structures

    ###########################################################################
    # Tools
    ###########################################################################

    - key: tools.angular.description
      t: これは[Angular](https://angular.io/)についてで、非推奨になった[AngularJS](https://angularjs.org/)のものではないことに注意してください。
   
    ###########################################################################
    # Other Tools
    ###########################################################################

    - key: tools_others.runtimes
      t: JavaScriptランタイム
    - key: tools_others.runtimes.description
      t: いつもどのエンジン・ランタイム・実行環境を使っていますか？
    - key: tools_others.runtimes.others
      t: そのほかのランタイム
    - key: tools_others.runtimes.others.description
      t: そのほかの回答（自由入力欄）

    - key: tools_others.package_registries
      t: パッケージレジストリ
    - key: tools_others.package_registries.description
      t: いつもどのレジストリからパッケージを取得していますか？
    - key: tools_others.package_registries.others
      t: そのほかのパッケージレジストリ
    - key: tools_others.package_registries.others.description
      t: そのほかの回答（自由入力欄）

    - key: tools_others.form_factors
      aliasFor: environments.form_factors
    - key: tools_others.form_factors.description
      aliasFor: environments.form_factors.description

    ###########################################################################
    # Opinions
    ###########################################################################

    - key: opinions.js_moving_in_right_direction
      t: JavaScriptは正しい方向に進んでいる

    - key: opinions.building_js_apps_overly_complex
      t: JavaScriptアプリの開発はいまやとても複雑になった

    - key: opinions.js_over_used_online
      t: JavaScriptは過剰に使われている

    - key: opinions.enjoy_building_js_apps
      t: JavaScriptアプリの開発は楽しい

    - key: opinions.would_like_js_to_be_main_lang
      t: JavaScriptをメインのプログラミング言語にしたい

    - key: opinions.js_ecosystem_changing_to_fast
      t: JavaScriptエコシステムの変化は速すぎる

    - key: opinions_others.missing_from_js.others
      t: いまのJavaScriptに足りないと感じるものは？

    - key: opinions_others.missing_from_js.others.description
      t: JavaScriptにいつか追加されてほしい機能

    - key: happiness.state_of_the_web
      t: ウェブ技術の現状に満足していますか？

    - key: happiness.state_of_js
      t: JavaScriptの現状に満足していますか？

    # Pain Points
    - key: opinions.js_pain_points
      t: JavaScript Pain Points
    - key: opinions.js_pain_points.description
      t: For each matchup, pick the aspect of JavaScript you struggle with the most.

    - key: opinions_others.js_pain_points.others
      t: Other JavaScript Pain Points

    # Missing Features
    - key: opinions.currently_missing_from_js
      t: What do you feel is currently missing from JavaScript?
    - key: opinions.currently_missing_from_js.description
      t: For each matchup, pick the feature you'd most like to be able to use in JavaScript today.
    - key: opinions_others.currently_missing_from_js.others
      t: Other Missing Features

    ###########################################################################
    # Resources
    ###########################################################################

    - key: resources.first_steps
      t: First Steps With JavaScript
    - key: resources.first_steps.description
      t: When first starting out, how did you initially learn JavaScript?